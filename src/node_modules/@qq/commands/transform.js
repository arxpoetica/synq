import { readconfig, writeconfig, readworking } from '@qq/utils/config'
import { log } from '@qq/utils/basic'

export default function(prog) {

	prog
		.command('transform')
		.describe('Manage a set of API transforms against data')
		.option('-l, --list', 'List transforms.')
		.action(async(opts) => {
			if (opts.list) {
				const working = await readworking()
				const { databases } = await readconfig(opts)
				if (!working || !databases || !databases[working]) { throw new Error('No working database.') }

				const { transforms } = databases[working]
				if (transforms) {
					console.log('Remotes:')
					for (let key in transforms) {
						console.log(`${key} | ${transforms[key].url}`)
					}
				} else {
					console.log('No transforms.')
				}
			}
		})


	prog
		.command('transform create <name>', 'Create a API transform template')
		.action(async(name, opts) => {
			try {
				const working = await readworking()
				if (!working) { throw new Error('No working database.') }

				const config = await readconfig(opts)

				const db = config.databases[working]
				db.transforms = db.transforms || {}
				db.transforms[name] = db.transforms[name] || {}
				await writeconfig(config)
			} catch (error) {
				log.error(error.message)
			}
		})

}
